pipeline{
    agent any
    stages{
        stage('Clone the repo'){
            steps{
                checkout scm
            }
        }
        stage('SonarQube analysis'){
            steps{
                script{
                def scannerHome = tool 'scanner-home';
                withSonarQubeEnv('scanner-home'){
                    sh"${scannerHome}/bin/scanner-home clean verify sonar:sonar -Dsonar.projectKey=sonarqubetest1 -Dsonar.projectName='sonarqubetest1'"
                }
                }
            }
        }
        stage('Quality Gates'){
            steps{
                script{
                timeout(time: 1, unit: 'HOURS') {
                    def qg = waitForQualityGate() 
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
                }
             }
        }
    }   
}
pipeline{
    agent any
    stages{
    stage('Clone the repo'){
        steps{
        git 'https://github.com/berendkorendijk/itvb23ows-starter-code'
        }
    }
    stage('SonarQube analysis'){
        steps{
        def scannerHome = tool 'sonarqube';
        withSonarQubeEnv('sonarqube'){
            sh "${scannerHome}/bin/sonar-scanner \
            -D sonar.login=admin \
            -D sonar.password=admin \
            -D sonar.projectKey=sonarqubetest1 \
            -D sonar.exclusions=vendor/**,resources/**,**/*.java \
            -D sonar.host.url=http://localhost:9000/"
            }
        }
    }
    stage('Quality Gates'){
        steps{
         timeout(time: 1, unit: 'HOURS') {
            def qg = waitForQualityGate() 
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
}